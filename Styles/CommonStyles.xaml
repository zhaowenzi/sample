<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:素材合成">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Base.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <SolidColorBrush x:Key="niceBlack" Color="#021A31"></SolidColorBrush>
    <SolidColorBrush x:Key="niceBlackEnable" Color="#485368"></SolidColorBrush>
    <SolidColorBrush x:Key="niceTextColor" Color="#666666"></SolidColorBrush>
    <SolidColorBrush x:Key="niceBackground" Color="#F6F6F8"></SolidColorBrush>
    <SolidColorBrush x:Key="niceGray" Color="#E6E7EA"></SolidColorBrush>
    <SolidColorBrush x:Key="niceHover" Color="#ADADB4"></SolidColorBrush>
   
    <!--几种按钮-->
    <Style x:Key="btnBase" TargetType="{x:Type Button}">
        <Setter Property="FontSize" Value="15"></Setter>
        <Setter Property="FontWeight" Value="Normal"></Setter>
        <Setter Property="FontFamily" Value="微软雅黑"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="Foreground" Value="{StaticResource ButtonForeground}"></Setter>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border BorderBrush="#0478FF" BorderThickness="0" CornerRadius="5" Name="PART_Background">
                            <Border.Background>
                                <SolidColorBrush Color="#0478FF">
                                </SolidColorBrush>
                            </Border.Background>
                            <ContentPresenter Content="{TemplateBinding ContentControl.Content}"  VerticalAlignment="Center" />

                        </Border>
                        <Rectangle x:Name="DisabledVisualElement" Fill="#C0C0C0" IsHitTestVisible="false" Opacity="0" RadiusY="5" RadiusX="5"  />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="Gold"></Setter>

                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="#3399CC"></Setter>
                            <Setter Property="Background" Value="#F0F182"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="PART_Background" Value="#999999"></Setter>
                            <!--<Setter Property="Opacity" Value="0.7"  TargetName="DisabledVisualElement"/>-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="btnBasePlay" TargetType="{x:Type Button}">
        <Setter Property="FontSize" Value="15"></Setter>
        <Setter Property="FontWeight" Value="Normal"></Setter>
        <Setter Property="FontFamily" Value="微软雅黑"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border BorderBrush="Transparent" BorderThickness="0" CornerRadius="5" Name="PART_Background">
                            <Border.Background>
                                <SolidColorBrush Color="Transparent">
                                </SolidColorBrush>
                            </Border.Background>
                            <Image x:Name="PlayOrPause" Source="/img/play.png"></Image>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="Gold"></Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#F0F182"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="PART_Background" Value="#999999"></Setter>
                            <!--<Setter Property="Opacity" Value="0.7"  TargetName="DisabledVisualElement"/>-->
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="btnBasePause" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="FontSize" Value="15"></Setter>
        <Setter Property="FontWeight" Value="Normal"></Setter>
        <Setter Property="FontFamily" Value="微软雅黑"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="Foreground" Value="{StaticResource ButtonForeground}"></Setter>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border BorderBrush="Transparent" BorderThickness="0" CornerRadius="5" Name="PART_Background">
                            <Border.Background>
                                <SolidColorBrush Color="Transparent">
                                </SolidColorBrush>
                            </Border.Background>
                            <Image x:Name="PlayOrPause" Source="/img/pause.png"></Image>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="Gold"></Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#F0F182"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="PART_Background" Value="#999999"></Setter>
                            <!--<Setter Property="Opacity" Value="0.7"  TargetName="DisabledVisualElement"/>-->
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="btnBaseNext" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="FontSize" Value="15"></Setter>
        <Setter Property="FontWeight" Value="Normal"></Setter>
        <Setter Property="FontFamily" Value="微软雅黑"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="Foreground" Value="{StaticResource ButtonForeground}"></Setter>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border BorderBrush="Transparent" BorderThickness="0" CornerRadius="5" Name="PART_Background">
                            <Border.Background>
                                <SolidColorBrush Color="Transparent">
                                </SolidColorBrush>
                            </Border.Background>
                            <Image x:Name="PlayOrPause" Source="/img/next.png"></Image>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="Gold"></Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#F0F182"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="PART_Background" Value="#999999"></Setter>
                            <!--<Setter Property="Opacity" Value="0.7"  TargetName="DisabledVisualElement"/>-->
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="btnBasePrevious" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="FontSize" Value="15"></Setter>
        <Setter Property="FontWeight" Value="Normal"></Setter>
        <Setter Property="FontFamily" Value="微软雅黑"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="Foreground" Value="{StaticResource ButtonForeground}"></Setter>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border BorderBrush="Transparent" BorderThickness="0" CornerRadius="5" Name="PART_Background">
                            <Border.Background>
                                <SolidColorBrush Color="Transparent">
                                </SolidColorBrush>
                            </Border.Background>
                            <Image x:Name="PlayOrPause" Source="/img/previous.png"></Image>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="Gold"></Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#F0F182"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="PART_Background" Value="#999999"></Setter>
                            <!--<Setter Property="Opacity" Value="0.7"  TargetName="DisabledVisualElement"/>-->
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="btnBaseDelete" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="FontSize" Value="15"></Setter>
        <Setter Property="FontWeight" Value="Normal"></Setter>
        <Setter Property="FontFamily" Value="微软雅黑"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="Foreground" Value="{StaticResource ButtonForeground}"></Setter>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border BorderBrush="Transparent" BorderThickness="0" CornerRadius="5" Name="PART_Background">
                            <Border.Background>
                                <SolidColorBrush Color="Transparent">
                                </SolidColorBrush>
                            </Border.Background>
                            <Image x:Name="PlayOrPause" Source="/img/Enter delete-2.png"></Image>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="Gold"></Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#F0F182"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="PART_Background" Value="#999999"></Setter>
                            <!--<Setter Property="Opacity" Value="0.7"  TargetName="DisabledVisualElement"/>-->
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="btnBaseCancel" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="FontSize" Value="12"></Setter>
        <Setter Property="FontWeight" Value="Normal"></Setter>
        <Setter Property="FontFamily" Value="微软雅黑"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="Foreground"  Value="White" ></Setter>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border Background="{StaticResource niceBlackEnable}" BorderThickness="0" CornerRadius="5" Name="PART_Background">
                            <ContentPresenter Content="{TemplateBinding ContentControl.Content}"  HorizontalAlignment="Center" VerticalAlignment="Center" />

                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="White"></Setter>
                            <Setter Property="Background" TargetName="PART_Background" Value="{StaticResource niceBlack}"></Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="Gold"></Setter>
                            <Setter Property="Background" Value="{StaticResource niceBlackEnable}"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="PART_Background" Value="#999"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="btnBaseSelect" TargetType="{x:Type Button}">
        <Setter Property="FontSize" Value="12"></Setter>
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="FontWeight" Value="Normal"></Setter>
        <Setter Property="FontFamily" Value="微软雅黑"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="Foreground" Value="{StaticResource ButtonBackground}"></Setter>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border BorderBrush="{StaticResource niceBlack}" BorderThickness="0" CornerRadius="5" Name="PART_Background">
                            <Border.Background>
                                <SolidColorBrush Color="{StaticResource niceBlack}">
                                </SolidColorBrush>
                            </Border.Background>
                            <ContentPresenter Content="{TemplateBinding ContentControl.Content}"  VerticalAlignment="Center" />

                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="Gold"></Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="White"></Setter>
                            <Setter Property="Background" Value="#0478FF"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="PART_Background" Value="{StaticResource niceBlackEnable}"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="btnLogin" TargetType="{x:Type Button}">
        <Setter Property="FontSize" Value="16"></Setter>
        <Setter Property="FontWeight" Value="Normal"></Setter>
        <Setter Property="FontFamily" Value="微软雅黑"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="Foreground" Value="{StaticResource ButtonForeground}"></Setter>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border BorderBrush="#F03060" BorderThickness="0" CornerRadius="5" Name="PART_Background">
                            <Border.Background>
                                <SolidColorBrush Color="#F03060">
                                </SolidColorBrush>
                            </Border.Background>
                            <ContentPresenter Content="{TemplateBinding ContentControl.Content}"  VerticalAlignment="Center" />

                        </Border>
                        <Rectangle x:Name="DisabledVisualElement" Fill="#C0C0C0" IsHitTestVisible="false" Opacity="0" RadiusY="5" RadiusX="5"  />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="Gold"></Setter>

                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="#3399CC"></Setter>
                            <Setter Property="Background" Value="#F0F182"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="PART_Background" Value="#999999"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="btnSelect" TargetType="{x:Type Button}">
        <Setter Property="FontSize" Value="12"></Setter>
        <Setter Property="FontWeight" Value="Bold"></Setter>
        <Setter Property="FontFamily" Value="微软雅黑"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="Foreground" Value="Black"></Setter>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border BorderBrush="Black" BorderThickness="1" CornerRadius="12" Name="PART_Background">
                            <Border.Background>
                                <SolidColorBrush Color="Transparent">
                                </SolidColorBrush>
                            </Border.Background>
                            <ContentPresenter Content="{TemplateBinding ContentControl.Content}"  VerticalAlignment="Center" />

                        </Border>
                        <Rectangle x:Name="DisabledVisualElement" Fill="#C0C0C0" IsHitTestVisible="false" Opacity="0" RadiusY="5" RadiusX="5"  />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="Gold"></Setter>

                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="#3399CC"></Setter>
                            <Setter Property="Background" Value="Transparent"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="PART_Background" Value="#999999"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="btnBaseEnableFalse" TargetType="{x:Type Button}">
        <Setter Property="FontSize" Value="20"></Setter>
        <Setter Property="FontWeight" Value="Bold"></Setter>
        <Setter Property="FontFamily" Value="微软雅黑"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="Foreground" Value="{Binding Path=Foreground}"></Setter>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border BorderBrush="#FF4B69" BorderThickness="0" CornerRadius="7" Name="PART_Background">
                            <Border.Background>
                                <SolidColorBrush Color="#999999">
                                </SolidColorBrush>
                            </Border.Background>
                            <ContentPresenter Content="{TemplateBinding ContentControl.Content}"  VerticalAlignment="Center" />

                        </Border>
                        <Rectangle x:Name="DisabledVisualElement" Fill="#C0C0C0" IsHitTestVisible="false" Opacity="0" RadiusY="5" RadiusX="5"  />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--水平渐变背景色-->
    <Style x:Key="CanvasBackGroundGrandient" TargetType="Canvas">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background">
            <Setter.Value>
                <RadialGradientBrush GradientOrigin="0.5,0.5" RadiusX="1" RadiusY="1">
                    <GradientStop Color="#E05697" Offset="0" />
                    <GradientStop Color="#C24C83" Offset="0.5" />
                    <GradientStop Color="#E05697" Offset="0" />
                </RadialGradientBrush>
            </Setter.Value>

        </Setter>
    </Style>



    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid>
                        <!--  滚动条背景色  -->
                        <Rectangle
                            Fill="#999"
                            RadiusX="5"
                            RadiusY="5" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HorizontalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Opacity" Value="0.5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        Fill="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="VerticalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Opacity" Value="0.5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        Fill="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="AduScrollbar" TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="0,1,1,0" />
        <!--  滚动条宽度  -->
        <Setter Property="Width" Value="8" />
        <Setter Property="MinWidth" Value="5" />
        <Setter Property="Opacity" Value="0.6" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" SnapsToDevicePixels="true">
                        <Track
                            x:Name="PART_Track"
                            IsDirectionReversed="true"
                            IsEnabled="{TemplateBinding IsMouseOver}">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}"  Style="{StaticResource VerticalScrollBarPageButton}" />
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource VerticalScrollBarPageButton}" />
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ScrollBarThumb}" />
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Margin" Value="1,0,6,1" />
                <Setter Property="Height" Value="10" />
                <Setter Property="MinHeight" Value="10" />
                <Setter Property="Width" Value="Auto" />
                <Setter Property="Opacity" Value="0.5" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                <Track x:Name="PART_Track" IsEnabled="{TemplateBinding IsMouseOver}">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource HorizontalScrollBarPageButton}" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource HorizontalScrollBarPageButton}" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource ScrollBarThumb}" />
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AduScrollViewer" TargetType="{x:Type ScrollViewer}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="BorderBrush" Value="LightGray" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Border
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">
                        <Grid Background="{TemplateBinding Background}">
                            <ScrollContentPresenter
                                Margin="{TemplateBinding Padding}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                Cursor="{TemplateBinding Cursor}" />
                            <ScrollBar
                                x:Name="PART_VerticalScrollBar"
                                HorizontalAlignment="Right"
                                Maximum="{TemplateBinding ScrollableHeight}"
                                Orientation="Vertical"
                                Style="{StaticResource AduScrollbar}"
                                ViewportSize="{TemplateBinding ViewportHeight}"
                                Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                Value="{TemplateBinding VerticalOffset}" />
                            <ScrollBar
                                x:Name="PART_HorizontalScrollBar"
                                VerticalAlignment="Bottom"
                                Maximum="{TemplateBinding ScrollableWidth}"
                                Orientation="Horizontal"
                                Style="{StaticResource AduScrollbar}"
                                ViewportSize="{TemplateBinding ViewportWidth}"
                                Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                Value="{TemplateBinding HorizontalOffset}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--<EventTrigger RoutedEvent="ScrollChanged">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation
                                        Storyboard.TargetName="PART_VerticalScrollBar"
                                        Storyboard.TargetProperty="Opacity"
                                        To="1"
                                        Duration="0:0:1" />
                                            <DoubleAnimation
                                        BeginTime="0:0:1"
                                        Storyboard.TargetName="PART_VerticalScrollBar"
                                        Storyboard.TargetProperty="Opacity"
                                        To="0.5"
                                        Duration="0:0:1" />
                                            <DoubleAnimation
                                        Storyboard.TargetName="PART_HorizontalScrollBar"
                                        Storyboard.TargetProperty="Opacity"
                                        To="1"
                                        Duration="0:0:1" />
                                            <DoubleAnimation
                                        BeginTime="0:0:1"
                                        Storyboard.TargetName="PART_HorizontalScrollBar"
                                        Storyboard.TargetProperty="Opacity"
                                        To="0.5"
                                        Duration="0:0:1" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--下拉按钮-->
    <Style TargetType="ToggleButton" x:Key="ComboxStyleBtn">
        <Setter Property="Cursor"  Value="Hand"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border x:Name="Back" Background="#F7FDF7" BorderThickness="1" BorderBrush="Transparent">
                        <Path Name="PathFill" Fill="{StaticResource niceTextColor}" Width="8" Height="6" StrokeThickness="0" Data="M5,0 L10,10 L0,10 z" RenderTransformOrigin="0.5,0.5" Stretch="Fill">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform  ScaleX="1.2" ScaleY="1.2"/>
                                    <SkewTransform/>
                                    <RotateTransform Angle="180"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PathFill" Property="Fill" Value="#333"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter  Property="OverridesDefaultStyle" Value="True"/>
        <Setter  Property="IsTabStop" Value="False"/>
        <Setter  Property="Focusable" Value="False"/>
        <Setter  Property="ClickMode" Value="Press"/>
        <Setter  Property="Background" Value="Transparent"/>
        <Setter  Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="{x:Type ToggleButton}">
                    <Border  Background="White" CornerRadius="5">
                        <Image Source="/img/icon_xl.png" HorizontalAlignment="Right" Width="11" Height="6" Margin="0,0,5,0" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="GraininessesTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="0" Background="#FAFAFA" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                    <ScrollViewer x:Name="DropDownScrollViewer"  Style="{StaticResource AduScrollViewer}" >
                        <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                            <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                            </Canvas>
                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Grid>
                    </ScrollViewer>
                </Border>
            </Popup>
            <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" Grid.Column="0" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
            <ContentPresenter Grid.Column="0" x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Grid>

    </ControlTemplate>

    <Style x:Key="comboxBase" TargetType="{x:Type ComboBox}">
        <Setter Property="Cursor"  Value="Hand"></Setter>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <!--  ComBoxItem  -->
                <Style TargetType="ComboBoxItem">
                    <Setter Property="MinHeight" Value="22" />
                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                    <Setter Property="MinWidth" Value="60" />
                    <Setter Property="Foreground" Value="Black" />
                    <Setter Property="Cursor"  Value="Hand"></Setter>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ComboBoxItem">
                                <Border
                                    Name="Back"
                                    Padding="10"
                                    Background="Transparent"
                                    BorderBrush="#666"
                                    BorderThickness="0">
                                    <ContentPresenter
                                        Margin="0,0,0,0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                       
                                        ContentSource="{Binding Source}" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="FontSize"  Value="18" />
                                        <Setter Property="Foreground"  Value="Black" />
                                    </Trigger>
                                    <Trigger Property="IsHighlighted" Value="True">
                                        <Setter TargetName="Back" Property="Background" Value="Transparent" />
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Foreground" Value="#666"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Border
                        Background="Transparent"
                       BorderBrush="#1E9FFF"
                        BorderThickness="1"
                        CornerRadius="5">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition MaxWidth="30" />
                            </Grid.ColumnDefinitions>
                            <TextBox
                                Grid.Column="0"
                                FontSize="13"
                                Foreground="#666"
                                BorderThickness="0"
                                VerticalAlignment="Center"
                                TextAlignment="Center"
                                IsReadOnly="True"
                                Margin="4,0,0,0"
                               x:Name="PART_EditableTextBox"
                                Text="{TemplateBinding Text}" />
                            <ToggleButton
                                Grid.Column="1"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                ClickMode="Press"
                                IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                Style="{StaticResource ComboxStyleBtn}" />
                            <Popup
                                x:Name="Popup"
                                AllowsTransparency="True"
                                Focusable="False"
                                IsOpen="{TemplateBinding IsDropDownOpen}"
                                Placement="Bottom"
                                PopupAnimation="Slide">
                                <Border
                                    x:Name="DropDown"
                                    MinWidth="{TemplateBinding ActualWidth}"
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                    BorderThickness="1"
                                    CornerRadius="1"
                                    SnapsToDevicePixels="True">
                                    <ScrollViewer  Background="#F4F4F4"
                                        MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                        Margin="0"
                                        CanContentScroll="True"
                                        HorizontalScrollBarVisibility="Auto"
                                        SnapsToDevicePixels="True"
                                        Style="{DynamicResource WScrollviewer}"
                                        VerticalScrollBarVisibility="Auto">
                                        <!--  StackPanel 用于显示子级，方法是将 IsItemsHost 设置为 True  -->
                                        <StackPanel
                                            Background="#F4F4F4"
                                            IsItemsHost="True"
                                            KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--复选框-->
    <Style x:Key="chkBullet" TargetType="CheckBox">
        <Setter Property="IsChecked" Value="False"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#999999"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid>
                        <StackPanel  Orientation="Horizontal">
                            <Image  x:Name="IconImage" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" />
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger  Property="IsChecked" Value="true">
                            <Setter  TargetName="IconImage" Property="Source" Value="../img/btn_on.png"/>
                        </Trigger>
                        <Trigger  Property="IsChecked" Value="False">
                            <Setter  TargetName="IconImage" Property="Source" Value="../img/btn_off.png"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="chkPassWord" TargetType="CheckBox">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#ACABAB"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid  x:Name="grid"  Margin="{TemplateBinding Padding}" VerticalAlignment="Center">
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                            <Border  x:Name="border" BorderBrush="{StaticResource niceHover}" BorderThickness="1"  Width="20" Height="20" CornerRadius="4">
                                <Grid>
                                    <Rectangle  VerticalAlignment="Center" 
                                                x:Name="backGround" Width="20" Height="20" Fill="Transparent" ></Rectangle>
                                    <TextBlock  x:Name="text"  Text="✔" VerticalAlignment="Center" Margin="1,0,0,0" 
                                        FontSize="12" FontWeight="Normal"
                                        Foreground="{StaticResource niceBlack}"/>
                                </Grid>
                            </Border>
                            <ContentPresenter VerticalAlignment="Center" Content="{TemplateBinding Content }">
                            </ContentPresenter>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger  Property="IsChecked" Value="true">
                            <Setter  TargetName="backGround" Property="Fill" Value="Transparent"/>
                            <Setter  TargetName="text" Property="Visibility" Value="Visible"/>
                            <Setter  TargetName="border" Property="BorderBrush" Value="#666"/>
                        </Trigger>
                        <Trigger  Property="IsChecked" Value="False">
                            <Setter  TargetName="backGround" Property="Fill" Value="Transparent"/>
                            <Setter  TargetName="text" Property="Visibility" Value="Hidden"/>
                            <Setter  TargetName="border" Property="BorderBrush" Value="{StaticResource niceHover}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="btnMax" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource ButtonForeground}"></Setter>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Height="14" Width="14">
                        <Border BorderBrush="#0478FF" BorderThickness="0" CornerRadius="5" Name="PART_Background">
                            <Border.Background>
                                <SolidColorBrush Color="Transparent">
                                </SolidColorBrush>
                            </Border.Background>
                            <Image Height="14" Width="14" Source="/img/ic_最大_白.png"></Image>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="Gold"></Setter>

                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="#3399CC"></Setter>
                            <Setter Property="Background" Value="#F0F182"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="PART_Background" Value="#999999"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="btnFull" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource ButtonForeground}"></Setter>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Height="14" Width="14">
                        <Border BorderBrush="#0478FF" BorderThickness="0" CornerRadius="5" Name="PART_Background">
                            <Border.Background>
                                <SolidColorBrush Color="Transparent">
                                </SolidColorBrush>
                            </Border.Background>
                            <Image Height="14" Width="14" Source="/img/ic_full.png"></Image>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="Gold"></Setter>

                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="#3399CC"></Setter>
                            <Setter Property="Background" Value="#F0F182"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="PART_Background" Value="#999999"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="btnMin" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource ButtonForeground}"></Setter>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Height="14" Width="14">
                        <Border BorderBrush="#0478FF" BorderThickness="0" CornerRadius="5" Name="PART_Background">
                            <Border.Background>
                                <SolidColorBrush Color="Transparent">
                                </SolidColorBrush>
                            </Border.Background>
                            <Image Height="14" Width="14" Source="/img/ic_最小_白.png"></Image>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="Gold"></Setter>

                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="#3399CC"></Setter>
                            <Setter Property="Background" Value="#F0F182"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="PART_Background" Value="#999999"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="btnClose" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource ButtonForeground}"></Setter>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Height="14" Width="14">
                        <Border BorderBrush="#0478FF" BorderThickness="0" CornerRadius="5" Name="PART_Background">
                            <Border.Background>
                                <SolidColorBrush Color="Transparent">
                                </SolidColorBrush>
                            </Border.Background>
                            <Image Height="14" Width="14" Source="/img/ic_关闭_白.png"></Image>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="Gold"></Setter>

                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="#3399CC"></Setter>
                            <Setter Property="Background" Value="#F0F182"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="PART_Background" Value="#999999"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    

    <Style x:Key="ExpanderToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="White"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid   Width="300" Height="{TemplateBinding Height}" 
                    Background="White" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="20"></ColumnDefinition>
                            <ColumnDefinition Width="240"></ColumnDefinition>
                        </Grid.ColumnDefinitions>

                        <Canvas x:Name="canvNormal" Visibility="Visible"  Background="Transparent" Height="20" Width="20"
                                         Grid.Column="0"   SnapsToDevicePixels="True" Canvas.Right="0">
                            <Image Source="/img/close.png" Width="20" Height="20" Stretch="Fill"  HorizontalAlignment="Stretch" VerticalAlignment="Center" ></Image>
                        </Canvas>
                        <Canvas x:Name="canvChecked" Visibility="Hidden"   Background="Transparent" Height="20" Width="20"
                     SnapsToDevicePixels="True" Canvas.Right="0">
                            <Image Source="/img/open.png" Width="20" Height="20" ></Image>
                        </Canvas>
                        <ContentPresenter  Grid.Column="1"
                                 SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                 VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Visibility" TargetName="canvChecked" Value="Visible" />
                            <Setter Property="Visibility" TargetName="canvNormal" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderStyle" TargetType="{x:Type Expander}">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontFamily" Value="微软雅黑" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Grid 
                            Background="{TemplateBinding Background}" SnapsToDevicePixels="True"
                            Width="260">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="25"></RowDefinition>
                            <RowDefinition></RowDefinition>
                        </Grid.RowDefinitions>
                        <ToggleButton x:Name="HeaderSite"  Grid.Row="0" Margin="{TemplateBinding Margin}"
                          ContentTemplate="{TemplateBinding HeaderTemplate}" 
                          ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                          Content="{TemplateBinding Header}"                                   
                          IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"                                  
                          Style="{StaticResource ExpanderToggleButtonStyle}" />
                        <ContentPresenter x:Name="ExpandSite" Grid.Row="1" 
                                              ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Margin}" Visibility="Collapsed" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter Property="Visibility" TargetName="ExpandSite" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ListBoxItem" x:Key="ListBoxItemEmptyTemplate">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="BorderBackground" BorderBrush="Transparent" BorderThickness="0" Background="Transparent" Padding="0" Margin="0" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>

                            <Setter Property="Background" TargetName="BorderBackground" Value="Transparent" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <DataTemplate x:Key="NetWorkVideoNodeTemplate"   >
        <Border x:Name="border" BorderThickness="0" BorderBrush="#EDEDED" Margin="0,0"  >
            <Grid  Margin="3,0" Width="250"  Height="95" Background="Transparent">
                <Grid.ColumnDefinitions  >
                    <ColumnDefinition Width="70" />
                    <ColumnDefinition  />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="40"></RowDefinition>
                    <RowDefinition Height="25"></RowDefinition>
                    <RowDefinition Height="30"></RowDefinition>
                </Grid.RowDefinitions>
                <Grid Grid.Column="1" Grid.Row="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition></ColumnDefinition>
                        <ColumnDefinition></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Button  x:Name="btnPreview" Width="60"  Height="20" FontSize="13" 
                                          VerticalAlignment="Center" Content="预览"  
                                           Style="{StaticResource btnBase}"></Button>
                    <Button Grid.Column="1" x:Name="downloadButton"
                                   Width="60"  Height="20" FontSize="13" VerticalAlignment="Center" Content="购买" 
                                    Style="{StaticResource btnBase }"></Button>
                </Grid>
            </Grid>
        </Border>
        <DataTemplate.Triggers>
            <DataTrigger   Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}},Path=IsSelected}" Value="true">
                <Setter TargetName="border" Property="BorderBrush" Value="#0478FF" />
                <Setter TargetName="border" Property="BorderThickness" Value="2,0,0,0" />
            </DataTrigger>
        </DataTemplate.Triggers>

    </DataTemplate>




    <!--Control-specific resources.-->
    <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
    <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
    <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

    <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>

    <LinearGradientBrush x:Key="MenuPopupBrush"
                     EndPoint="0.5,1"
                     StartPoint="0.5,0">
        <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="0" />
        <GradientStop Color="{DynamicResource ControlMediumColor}"
                Offset="0.5" />
        <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="SldierBackGround"
                     EndPoint="1,0.5"
                     StartPoint="0,0.5">
        <GradientStop Color="#C62C71"
                Offset="0" />
        <GradientStop Color="#F5482A"
                Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="VIPBackground"
                     EndPoint="1,0.5"
                     StartPoint="0,0.5">
        <GradientStop Color="#EDC490"
                Offset="0" />
        <GradientStop Color="#C39046"
                Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill"
                     StartPoint="0,0"
                     EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#000000FF"
                    Offset="0" />
                <GradientStop Color="#600000FF"
                    Offset="0.4" />
                <GradientStop Color="#600000FF"
                    Offset="0.6" />
                <GradientStop Color="#000000FF"
                    Offset="1" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <Style x:Key="SliderButtonStyleLeft"
       TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels"
          Value="true" />
        <Setter Property="OverridesDefaultStyle"
          Value="true" />
        <Setter Property="IsTabStop"
          Value="false" />
        <Setter Property="Focusable"
          Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="#E4E7EB" Height="8" CornerRadius="4,0,0,4" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderButtonStyleRight"
       TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels"
          Value="true" />
        <Setter Property="OverridesDefaultStyle"
          Value="true" />
        <Setter Property="IsTabStop"
          Value="false" />
        <Setter Property="Focusable"
          Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="#62656A"  Height="8" CornerRadius="0,4,4,0"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderThumbStyle"
       TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels"
          Value="true" />
        <Setter Property="OverridesDefaultStyle"
          Value="true" />
        <Setter Property="Height"
          Value="10" />
        <Setter Property="Width"
          Value="10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Ellipse x:Name="Ellipse" 
                 StrokeThickness="2">
                        <Ellipse.Stroke>
                            <SolidColorBrush Color="White">

                            </SolidColorBrush>
                        </Ellipse.Stroke>
                        <Ellipse.Fill>
                            <SolidColorBrush Color="#666">

                            </SolidColorBrush>
                        </Ellipse.Fill>

                    </Ellipse>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Template when the orientation of the Slider is Horizontal.-->
    <ControlTemplate x:Key="HorizontalSlider"
                 TargetType="{x:Type Slider}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto"
                     MinHeight="{TemplateBinding MinHeight}" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <TickBar x:Name="TopTick"
             SnapsToDevicePixels="True"
             Placement="Top"
             Height="8"
             Visibility="Collapsed">
                <TickBar.Fill>
                    <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                </TickBar.Fill>
            </TickBar>
            <Border x:Name="TrackBackground"
            Margin="0"
            CornerRadius="5"
            Height="20"
            Grid.Row="1"
            BorderThickness="1">
            </Border>
            <Track Grid.Row="1"
           x:Name="PART_Track">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderButtonStyleLeft}"
                      Command="Slider.DecreaseLarge" Margin="0,0,-5,0" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource SliderThumbStyle}" Margin="0,0,0,0" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderButtonStyleRight}"
                      Command="Slider.IncreaseLarge" Margin="0,0,0,0"  />
                </Track.IncreaseRepeatButton>
            </Track>
            <TickBar x:Name="BottomTick"
             SnapsToDevicePixels="True"
             Grid.Row="2"
             Fill="{TemplateBinding Foreground}"
             Placement="Bottom"
             
             Height="8"
             Visibility="Collapsed" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement"
             Value="TopLeft">
                <Setter TargetName="TopTick"
              Property="Visibility"
              Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement"
             Value="BottomRight">
                <Setter TargetName="BottomTick"
              Property="Visibility"
              Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement"
             Value="Both">
                <Setter TargetName="TopTick"
              Property="Visibility"
              Value="Visible" />
                <Setter TargetName="BottomTick"
              Property="Visibility"
              Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--Template when the orientation of the Slider is Vertical.-->
    <ControlTemplate x:Key="VerticalSlider"
                 TargetType="{x:Type Slider}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto"
                        MinWidth="{TemplateBinding MinWidth}" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <TickBar x:Name="TopTick"
             SnapsToDevicePixels="True"
             Placement="Left"
             Width="8"
             Visibility="Collapsed">
                <TickBar.Fill>
                    <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                </TickBar.Fill>
            </TickBar>

            <Border x:Name="TrackBackground"
            Margin="0"
            CornerRadius="2"
            Width="6"
            Grid.Column="1"
            BorderThickness="1">
            </Border>
            <Track Grid.Column="1"
           x:Name="PART_Track">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderButtonStyleLeft}" Margin="0,-2,0,0"
                      Command="Slider.DecreaseLarge" >
                        <RepeatButton.LayoutTransform>
                            <RotateTransform Angle="-90">

                            </RotateTransform>
                        </RepeatButton.LayoutTransform>
                    </RepeatButton>
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource SliderThumbStyle}"  Margin="0,-0.5,0,0"/>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderButtonStyleRight}"
                      Command="Slider.IncreaseLarge" >
                        <RepeatButton.LayoutTransform>
                            <RotateTransform Angle="-90">

                            </RotateTransform>
                        </RepeatButton.LayoutTransform>
                    </RepeatButton>
                </Track.IncreaseRepeatButton>
            </Track>
            <TickBar x:Name="BottomTick"
             SnapsToDevicePixels="True"
             Grid.Column="2"
             Fill="{TemplateBinding Foreground}"
             Placement="Right"
             Width="8"
             Visibility="Collapsed" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement"
             Value="TopLeft">
                <Setter TargetName="TopTick"
              Property="Visibility"
              Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement"
             Value="BottomRight">
                <Setter TargetName="BottomTick"
              Property="Visibility"
              Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement"
             Value="Both">
                <Setter TargetName="TopTick"
              Property="Visibility"
              Value="Visible" />
                <Setter TargetName="BottomTick"
              Property="Visibility"
              Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="mySliderStyle" TargetType="{x:Type Slider}">
        <Setter Property="SnapsToDevicePixels"
          Value="true" />
        <Setter Property="OverridesDefaultStyle"
          Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation"
             Value="Horizontal">
                <Setter Property="MinWidth"
              Value="104" />
                <Setter Property="MinHeight"
              Value="21" />
                <Setter Property="Template"
              Value="{StaticResource HorizontalSlider}" />
            </Trigger>
            <Trigger Property="Orientation"
             Value="Vertical">
                <Setter Property="MinWidth"
              Value="21" />
                <Setter Property="MinHeight"
              Value="104" />
                <Setter Property="Template"
              Value="{StaticResource VerticalSlider}" />
            </Trigger>
        </Style.Triggers>
    </Style>


</ResourceDictionary>
   